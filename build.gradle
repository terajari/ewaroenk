plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.hidetake.swagger.generator' version '2.19.2'
}

group = 'com.terajari'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

processResources {
	dependsOn (generateSwaggerCode)
}

swaggerSources {
    def typeMappings = 'URI=URI'
    def importMappings = 'URI=java.net.URI'
    ewaroenk {
        def apiyml = "${rootDir}/src/main/resources/api/openapi.yml"
        def configJson = "${rootDir}/src/main/resources/api/config.json"
        inputFile = file(apiyml)
        def ignoreFile = "${rootDir}/src/main/resources/api/.openapi-ignore"
        code {
            language = 'spring'
            configFile = file(configJson)
            rawOptions = [
                    '--ignore-file-override', ignoreFile,
                    '--type-mappings', typeMappings,
                    '--import-mappings', importMappings
            ] as List<String>
            components = [models: true, apis: true, supportingFiles: 'ApiUtil.java']
            dependsOn validation
        }
    }
}

compileJava.dependsOn swaggerSources.ewaroenk.code
sourceSets.main.java.srcDir "${swaggerSources.ewaroenk.code.outputDir}/src/main/java"
sourceSets.main.resources.srcDir "${swaggerSources.ewaroenk.code.outputDir}/src/main/resources"

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}


dependencies {
    swaggerCodegen 'org.openapitools:openapi-generator-cli:6.2.1'
    compileOnly 'io.swagger:swagger-annotations:1.6.4'
    compileOnly 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.openapitools:jackson-databind-nullable:0.2.3'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'io.springfox:springfox-oas:3.0.0'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
